{% extends 'base.html.twig' %}

{% block title %}Hello SortiesController!{% endblock %}

{% block body %}
    <div class="create-event">
        <h1>Créer une sortie {{ parent() }} ✅</h1>

        {{form_start(eventForm)}}
        <div class="global-div-form">
            <div>
                <div class="el-div-form">
                    {{form_row(eventForm.name)}}
                </div>
                <div class="el-div-form">
                    {{form_row(eventForm.startDate)}}
                </div>
                <div class="el-div-form">
                    {{form_row(eventForm.registrationLimitDate)}}
                </div>
                <div class="el-div-form">
                    {{form_row(eventForm.maxRegistrations)}}
                </div>
                <div class="el-div-form">
                    {{form_row(eventForm.duration)}}
                </div>
                <div class="el-div-form">
                    {{form_row(eventForm.infos)}}
                </div>
            </div>

            <div>
                <div class="el-div-form">
                    {{ form_row(eventForm.campus) }}
                </div>

    {#            {{ form_row(locationForm.city) }}#}

                <div class="el-div-form">
                    {{ form_row(eventForm.location) }}
{#                    {{ form_label(eventForm.location) }}#}
{#                    {{ form_widget(eventForm.location) }}#}
{#                    {{ form_errors(eventForm.location) }}#}
    {#                <button type="button" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#locationModal">+</button>#}
                </div>

    {#            <div>#}
    {#                <label for="street-select">Rue :</label>#}
    {#                <select id="street-select">#}
    {#                    {% for ev in eventRepo %}#}
    {#                        <option value="{{ ev.location.id }}">{{ ev.location.street }}</option>#}
    {#                    {% endfor %}#}
    {#                </select>#}
    {#            </div>#}

    {#            <div>#}
    {#                <label for="zip-select">Code postal :</label>#}
    {#                <select id="zip-select">#}
    {#                    {% for ev in eventRepo %}#}
    {#                        <option value="{{ ev.location.city.id }}">{{ ev.location.city.zip }}</option>#}
    {#                    {% endfor %}#}
    {#                </select>#}
    {#            </div>#}

    {#            {{form_row(locationForm.latitude)}}#}
    {#            {{form_row(locationForm.longitude)}}#}
            </div>
        </div>

        <div>
            {{ form_row(eventForm.publish) }}
            {{ form_row(eventForm.registerEvent) }}
            <button><a href="{{ path('sorties_home') }}">Annuler !</a></button>
        </div>
        {{form_end(eventForm)}}

        {# fenêtre modale, cachée par défaut, sera affichée au clic sur le + #}
{#        <div id="locationModal" class="modal" aria-hidden="true" role="dialog" aria-labelledby="title-modal" style="display: none">#}
{#            <div class="modal-wrapper js-modal-stop" role="document">#}
{#                <div class="modal-content">#}
{#                    <div class="modal-header">#}
{#                        <h5 class="title-modal" id="locationModalLabel">Ajouter un nouveau lieu de sortie</h5>#}
{#                        <button class="js-modal-close" aria-label="Close">#}
{#                            <span aria-hidden="true">&times;</span>#}
{#                        </button>#}
{#                    </div>#}
{#                    <div class="modal-body">#}
{#                        {{ form_start(locationForm, {'attr' : {'id': 'location_form'}}) }}#}
{#                        {{ form_widget(locationForm) }}#}
{#                        {{ form_row(locationForm.city) }}#}
{#                        <div>#}
{#                            <label for="city-select">Ville :</label>#}
{#                            <select id="city-select">#}
{#                                {% for ev in eventRepo %}#}
{#                                    <option value="{{ ev.location.city.id }}">{{ ev.location.city.name }}</option>#}
{#                                {% endfor %}#}
{#                            </select>#}
{#                        </div>#}
{#                    </div>#}
{#                    <div class="modal-footer">#}
{#                        <button type="submit" class="btn btn-primary">GO</button>#}
{#                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Annuler</button>#}
{#                    </div>#}
{#                    {{ form_end(locationForm) }}#}
{#                </div>#}
{#            </div>#}
{#        </div>#}
    </div>
{% endblock %}

{% block js %}
    <script>
        configDateAndTime = {
            enableTime: true,
            dateFormat: "d/m/Y H:i",
            altInput: true,
            altFormat: "d/m/Y H:S",
            ariaDateFormat: "l d F Y à H:S",
            locale: "fr",
            time_24hr: true,
            minDate: "today"
        }

        configDate = {
            enableTime: false,
            dateFormat: "d/m/Y",
            altInput: true,
            altFormat: "d/m/Y",
            ariaDateFormat: "l d F Y",
            locale: "fr",
            // time_24hr: true,
            minDate: "today"
        }

        flatpickr(".flatpickrDateTime", configDateAndTime);
        flatpickr(".flatpickrDate", configDate);
        flatpickr.localize(flatpickr.l10ns.fr);
        flatpickr.l10ns.default.firstDayOfWeek = 1; // Lundi

        // /**
        //  * Ce code gère la soumission du formulaire de la modale en ajax
        //  */
        // let modal = null;
        // const focusableSelector = 'button, a, input, textarea';
        // let focusables = [];
        // let previouslyFocusedElement = null;
        //
        // const openModal = async function (e) {
        //     e.preventDefault();
        //     const target = e.target.getAttribute('href');
        //     modal = await loadModal(target);
        //     focusables = Array.from(modal.querySelectorAll(focusableSelector));
        //     previouslyFocusedElement = document.querySelector(':focus');
        //     modal.style.display = null;
        //     focusables[0].focus();
        //     modal.removeAttribute('aria-hidden');
        //     modal.setAttribute('aria-modal', 'true');
        //     modal.addEventListener('click', closeModal);
        //     modal.querySelector('.js-modal-close').addEventListener('click', closeModal);
        //     modal.querySelector('.js-modal-stop').addEventListener('click', stopPropagation);
        // }
        //
        // const closeModal = function (e) {
        //     if (modal === null) return;
        //     if (previouslyFocusedElement !== null) previouslyFocusedElement.focus();
        //     e.preventDefault();
        //     modal.setAttribute('aria-hidden', 'true');
        //     modal.removeAttribute('aria-modal');
        //     modal.removeEventListener('click', closeModal);
        //     modal.querySelector('.js-modal-close').removeEventListener('click', closeModal);
        //     modal.querySelector('.js-modal-stop').removeEventListener('click', stopPropagation);
        //
        //     const hideModal = function () {
        //         modal.style.display = "none";
        //         modal.removeEventListener('animationend', hideModal);
        //         modal = null;
        //     }
        //     modal.addEventListener('animationend', hideModal);
        // }
        //
        // const stopPropagation = function (e) {
        //     e.stopPropagation();
        // }
        //
        // const focusInModal = function (e) {
        //     e.preventDefault();
        //     let index =  focusables.findIndex(f => f === modal.querySelector(':focus'));
        //     e.shiftKey === true ? index-- : index++ ;
        //     if (index >= focusables.length) {
        //         index = 0;
        //     }
        //     if (index < 0) {
        //         index = focusables.length - 1;
        //     }
        //     focusables[index].focus();
        // }
        //
        // const loadModal = async function (url) {
        //     const existingModal = document.querySelector('#locationModal');
        //     if (existingModal !== null) return existingModal;
        //     const html = await fetch(url).then(response => response.text());
        //     const element = document.createRange().createContextualFragment(html).querySelector('#locationModal');
        //     document.body.append(element);
        //     return element;
        // }
        //
        // document.querySelectorAll('.js-modal').forEach(a => {
        //     a.addEventListener('click', openModal);
        // })
        //
        // window.addEventListener('keydown', function (e){
        //     if (e.key === "Escape" || e.key === "Esc") {
        //         closeModal(e)
        //     }
        //     if (e.key === 'Tab' && modal !== null) {
        //         focusInModal(e)
        //     }
        // })


        // Code pour les modales de Guillaume
        {#//quand on tente de soumettre le formulaire de création de lieu (modale)...#}
        {#$("#location_form").on("submit", function(e){#}
        {#    //j'empêche la soumission normale (pour que la page ne se recharge pas)#}
        {#    e.preventDefault();#}
        {#    //j'envoie les données au serveur en ajax#}
        {#    $.ajax({#}
        {#        //ne marche que parce que je ne suis pas dans un fichier js externe#}
        {#        //url à laquelle je fais ma requête#}
        {#        "url": "{{ path('location_create') }}",#}
        {#        //je prends toutes les données du formulaire et je les balance avec ma requête#}
        {#        "data": $("#location_form").serialize(),#}
        {#        //en POST#}
        {#        "method": "post"#}
        {#    })#}
        {#        //sera appelée lorsque la requête est terminée#}
        {#        //je reçois la nouvelle "Location" en response, avec son id#}
        {#        .done(function(response){#}
        {#            //je crée une nouvelle balise <option>, ayant pour value l'id du lieu#}
        {#            let option = $("<option>").attr("value", response.location.id);#}
        {#            //j'injecte le nom du lieu en contenu de la balise#}
        {#            option.html(response.location.name);#}
        {#            //je lui met la propriété selected afin qu'elle soit préselectionnée dans le select#}
        {#            option.prop('selected', true);#}
        {#            //j'ajoute dans le select (au début de la liste)#}
        {#            $("#event_location").prepend(option);#}
        {#            //je ferme la modale#}
        {#            $('#locationModal').modal('hide');#}
        {#        });#}
        {#});#}
    </script>


{#    Code pour les modales de Guillaume#}
{#    <script>#}
{#        /**#}
{#         * Ce code gère le remplissage de la liste des villes en fonction du code postal tapé#}
{#         */#}
{#        //quand on tente de soumettre le formulaire de création de lieu (modale)...#}
{#        $("#location_zip").on("keyup", function(e){#}
{#            //récupère la valeur tapée#}
{#            let zip = $("#location_zip").val();#}
{#            if (zip.length < 5){#}
{#                return;#}
{#            }#}
{#            //j'envoie les données au serveur en ajax#}
{#            $.ajax({#}
{#                //ne marche que parce que je ne suis pas dans un fichier js externe#}
{#                //url à laquelle je fais ma requête#}
{#                "url": "{{ path('location_find_cities_by_zip') }}",#}
{#                //j'envoie le code postal tapé#}
{#                "data": {#}
{#                    'zip': zip#}
{#                },#}
{#                //en GET#}
{#                "method": "get"#}
{#            })#}
{#                //sera appelée lorsque la requête est terminée#}
{#                //je reçois une liste de ville en response, déjà formattée en html#}
{#                .done(function(response){#}
{#                    console.log(response);#}
{#                    $("#location_city").html(response);#}
{#                });#}
{#        });#}
{#    </script>#}
{% endblock %}
